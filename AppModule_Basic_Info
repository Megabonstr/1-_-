// Это модуль приложения (управляемого)
// Здесь описываются переменные, процедуры и функции, 
// выполняемые как правило при запуске и/или завершении работы системы

// Модуль это программа на встроенном языке системы 1с
// используется для описания алгоритмов выполнения программного кода
// и может вызываться для разных объектов (сущностей) конфигурации

// Структура Модулей в 1с 
// Любой модуль условно делится на три части и код выполняется сверху вниз
// 1. Объявляются глобальные переменные
// 2. Объявляются и описываются процедуры и функции
// 3. Значения присваиваются в переменные, вызываются процедуры и функции
// Нарушение данного порядка приведет к ошибке при компиляции кода

Процедура ПеременныеИПримитивныеТипыДанныхВ1с()

	// Переменные в 1С должны именоваться согласно стандарту CamelCase
	// т.е. все Слова с БольшойБуквы, так же в имени не допускаются пробелы и любые спецсимволы 
	// кроме символа нижнее подчеркивание "_", цифры можно использовать, но нельзя начинать с них название;

	// Язык именования выбирается исходя из основного языка описываемой конфигурации
	// если пишем на русском для пользователей РФ, то именование переменных например StringX недопустимо
	// и наоборот - если пишем конфигурации для англоязычных пользователей - недопустимо использование русского языка

	// Примитивные типы - к ним относятся простые типы данных, имеющих однозначное значение и тип данных
	// К ним относятся - строка, число, дата, Неопределено, NULL, булево и Тип

	// Строка
	ЭтоСтрока = "Текст или цифры 123456 или дата 2023-01-25 но все равно это строка текста";
	ЭтоМногоСтрочнаяСтрока = "Строка1
							 |Строка2" 
	ЭтоТожеМногострочнаяСтрока = "Строка1" "Строка2"
	
	Сообщить(ЭтоСтрока);
	Сообщить(ЭтоМногоСтрочнаяСтрока);
	Сообщить(ЭтоТожеМногострочнаяСтрока);
	
	// !! Все законченые строки кода называются Операторами и закрываются точкой с запятой ";"
	// Кроме объявления процедур и функций, они не являются операторами, а просто изолируют (выделяют) кусок кода

	// Число
	ЭтоЧисло = 999; // Присваиваем число переменной ЭтоЧисло. Число указывается цифрами и не заключается в кавычки;

	// !! При объявлении переменной например Перем ЭтоЧисло; 
	// !! При выполнении программы в оперативной памяти будет выделено(зарезервированно) место под эту переменную;
	// !! У переменной появится уникальный адрес и возможность ссылаться на неё, а так же значение = Неопределено;
	// !! Если переменная объявляется с оператором присваивания "=", то значением в памяти будет присвоенное значение;

	// Операции с числами
	// Встроенный язык системы позволяет использовать все современные методы математических вычеслений
	СуммаЧисел 			= 15 + 45; // 60
	ПроизведениеЧисел 	= 2 * 2; // 4
	СложныеВычисления 	= (15 + 45 / 2 * 2) * 3 + (138 / 15) * 10; // 272 

	// !! Система позволяет преобразовывать типы например при конкатенации строк (значений)
	ПреобразованиеКЧислу 	= 15 + "9";  // 9 будет преобразованов к числу и будет произведена операция сложения
	ПреобразованиеКСтроке 	= "15" + 9;  // 9 будет преобразовано в строку и результат будет "159"
	ПреобразованиеКДате 	= '2023 01 25' + "20230103"; // 16.09.2023 3:28:23
	// "20230103" будет преобразованов число и к дате прибавлено кол-во секунд    

	// !! Важно помнить - нельзя преобразовать к числу например строку "ф2ал34" - будет ошибка
	// !! К строке можно преобразовть любой тип данных поэтому для сообщений которые начинаются не со строки
	// !! Можно использовать "" пустую строку в начале сообщения, тогда все последующие значения будут преобразованы к строке

	// Дата
	ЭтоДата1 = '20230125';	// 25.01.2023 0:00:00 - обычное написание даты в 1С - формат ГГГГММДД
	ЭтоДата2 = '2023 01 25';// 25.01.2023 0:00:00 - Допустимое написание через пробел, для большей читабельности
	ЭтоДата3 = '2023-01-25';// 25.01.2023 0:00:00 - Вывод быдет таким же как и для примеров выше

	// Дата всегда выводится со временем, для изменения формата используется специальные методы 
	ЭтоДата1 = Формат('20230125', "ДЛФ=DD"); // 25 января 2023 года без времени  
	ЭтоДень = День(ТекущаяДата()); // 25 - выведет текущий день в виде числа месяца 
	ЭтоМесяц = Месяц(ТекущаяДата()); // 1 - выведет текущий месяц в виде числа месяца 
	ЭтоГод = Год(ТекущаяДата()); // 2 023 - выведет текущий год в виде числа месяца

	// Булево
	// Значение логического типа Истина/Ложь (1 или 0)  
	ЭтоИстина = Истина;
	ЭтоЛожь = Ложь;

	// Тип
	// Значения данного типа позволяют определчть и сравнивать типы значения 
	ЭтоЧисло = 123;
	ТипЧисло = Тип("Число");

	Если ТипЗнч(ЭтоЧисло) = ТипЧисло Тогда
		Сообщить(ТипЧисло); // Число
	КонецЕсли;
	
	Сообщить(ТипЗнч(ЭтоЧисло)); // Число

	// Неопределено 
	// Данное значение используется в качестве ПУСТОГО значения при работе с объектами конфигурации
	ПустаяПеременная = Неопределено; // Можно создать переменную с таким типом для дальнейшей обработки 
	
	// Так же значения данного типа возвращаются их некоторых функций как правило поиска в коллекциях
	// Это позволяет делать проверки результатов и не получать ошибки отсутвия значения
	
	// NULL  
	// Такое значение может быть получено при работе с базой данных, при определении отсутвующего значения
	// Т.е. элемент например Строка есть, мы можем к ней обратиться, но значение в строке отсутствует 

КонецПроцедуры


Процедура УсловныеОператоры()

	// Условные операторы используются для сравнения значений и ветвления исполняемого кода
	// Если / ИначеЕсли / Иначе / КонецЕсли
	
	Число1 = 100;
	Число2 = 200;
	
	// Если Тогда задает начало проверки, затем указывается выражения для сравнения
	// после задания условий обязательно используется ключевое слово Тогда
	Если Число1 > Число2 И (Число2 > 0 ИЛИ Число1 <> 0) Тогда
		Сообщить("Число1 больше чем Число2");
	// ИначеЕсли Тогда позволяет задать множественную проверку условий
	// проверка будет завершена когда хотя бы одно из условий ИначеЕсли вернет Истина
	ИначеЕсли Число1 < Число2 И (Число2 > 0 ИЛИ Число1 <> 0) Тогда
		Сообщить("Число2 больше чем Число1");
	// В отличие от ИначеЕсли, Иначе не позволяет задать разных условий
	// Срабатывает только в случае если проверки выше вернули Ложь, и не требует дополнительных проверок
	Иначе
		Сообщить("Числа не соответсвуют условиям для сравнения!");
	// Обязательное ключевое слово для завершения сравнения
	КонецЕсли;
	
	// Операторы сравнения для использования в связке с условными операторами
	// В порядке приоритета от приоритетного к менее приоритетному
	
	// () - круглые скобки, задают максимальный приоритет в сравнении
		// Математичеческие операторы выполняются по классическим правилам:
		// +А -Б Унарные плюс и минус, меняющие значение числа на отрицательное
		// * и / Умножение и деление
		// + и - Сложение и вычитание
		// < = > <> - 
	// НЕ - логическое отрицание меняет значение Истина/Ложь на противоположное
	// И - оператор выполняется после проверки условий в круглых скобках и выполнения математических операций
	// ИЛИ - последния операратор который сравнивает резултат нескольких сравнений
	
	Если (Число1 + Число2) <> (НЕ (Число2 - Число1)) ИЛИ (Число1 > 0 И Число2 > 0)Тогда
		Сообщить("Вот такая вот хитрая проверка");
	КонецЕсли; 
	
	//!! Для большей читабельности кода следуюет мат. выражения и сложные операции сравнения
	//!! заключать в круглые скобки, так будет легче и однозначней понять что происходит
	
	Условие1 = Истина;
	Условие2 = Ложь;
	Условие3 = Истина;
	Условие4 = Ложь;
	Условие5 = Ложь;
	Условие6 = Истина;
	
	СложноеУсловие = Условие1 И (Условие2 ИЛИ Условие3) ИЛИ Условие4 И Условие5 И НЕ Условие6;
	Сообщить(СложноеУсловие);

КонецПроцедуры

